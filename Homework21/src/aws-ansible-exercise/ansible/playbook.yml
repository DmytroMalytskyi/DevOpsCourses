---
- name: Install Docker + Compose and run Nginx
  hosts: web
  become: true
  gather_facts: true

  vars:
    compose_project_dir: /opt/nginx
    http_port: "80"
    mount_html: true
    docker_keyring: /etc/apt/keyrings/docker.gpg
    docker_list: /etc/apt/sources.list.d/docker.list

  tasks:

    # --- prerequisites ---
    - name: Ensure prerequisites are installed
      apt:
        name:
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present
        update_cache: true

    # --- clean old Docker setup ---
    - name: Remove old Docker sources list
      file:
        path: "{{ docker_list }}"
        state: absent

    - name: Ensure keyrings dir exists
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Remove old Docker keyring
      file:
        path: "{{ docker_keyring }}"
        state: absent

    # --- import Docker GPG key ---
    - name: Download and dearmor Docker GPG key
      shell: |
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg \
        | gpg --dearmor > "{{ docker_keyring }}"
      args:
        executable: /bin/bash

    - name: Set permissions on keyring
      file:
        path: "{{ docker_keyring }}"
        state: file
        mode: '0644'

    # --- add Docker repo ---
    - name: Add Docker apt repository
      copy:
        dest: "{{ docker_list }}"
        mode: '0644'
        content: |
          deb [arch={{ 'arm64' if ansible_facts.architecture in ['aarch64','arm64'] else 'amd64' }} signed-by={{ docker_keyring }}] https://download.docker.com/linux/ubuntu {{ ansible_facts.distribution_release }} stable

    - name: Update apt cache
      apt:
        update_cache: true

    # --- install Docker ---
    - name: Install Docker Engine and Compose v2
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present

    - name: Enable and start Docker
      systemd:
        name: docker
        enabled: true
        state: started

    # --- setup Nginx project ---
    - name: Create project directory
      file:
        path: "{{ compose_project_dir }}"
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Create optional HTML directory
      file:
        path: "{{ compose_project_dir }}/html"
        state: directory
        owner: root
        group: root
        mode: '0755'
      when: mount_html

    - name: Write beautiful index.html
      template:
        src: index.html.j2
        dest: "{{ compose_project_dir }}/html/index.html"
        owner: root
        group: root
        mode: '0644'
      when: mount_html


    - name: Write docker-compose.yml from template
      template:
        src: docker-compose.yml.j2
        dest: "{{ compose_project_dir }}/docker-compose.yml"
        mode: '0644'

    - name: Pull Nginx image
      command: docker compose pull
      args:
        chdir: "{{ compose_project_dir }}"

    - name: Start Nginx container
      command: docker compose up -d
      args:
        chdir: "{{ compose_project_dir }}"

    - name: Ensure Nginx port {{ http_port }} is listening
      wait_for:
        host: "127.0.0.1"
        port: "{{ http_port }}"
        timeout: 30
