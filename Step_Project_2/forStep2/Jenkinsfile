pipeline {
    agent {
        label 'worker' // або інший label, якщо твій агент має іншу назву
    }

    environment {
        IMAGE_NAME = 'dmytrro/test-nodejs-app'
        DOCKER_CREDENTIALS_ID = 'dockerhub-creds' // Назва Jenkins Credentials
    }

    stages {
        stage('Clone Repository') {
            steps {
                git 'https://github.com/DmytroMalytskyi/DevOpsCourses.git'
            }
        }

        stage('Change Directory to Project') {
            steps {
                dir('Step_Project_2/forStep2') {
                    script {
                        echo "Switched to project directory"
                    }
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                dir('Step_Project_2/forStep2') {
                    sh 'docker build -t $IMAGE_NAME .'
                }
            }
        }

        stage('Run Tests in Container') {
            steps {
                dir('Step_Project_2/forStep2') {
                    script {
                        def result = sh(script: 'docker run --rm --entrypoint "" $IMAGE_NAME npm test', returnStatus: true)
                        if (result != 0) {
                            error("Tests failed")
                        }
                    }
                }
            }
        }

        stage('Login to DockerHub') {
            steps {
                withCredentials([usernamePassword(credentialsId: env.DOCKER_CREDENTIALS_ID, usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh 'echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin'
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                sh 'docker push $IMAGE_NAME'
            }
        }
    }

    post {
        failure {
            echo '❌ Pipeline failed. Check logs for errors.'
        }
        success {
            echo '✅ Pipeline completed successfully.'
        }
    }
}
