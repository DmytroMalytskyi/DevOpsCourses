pipeline {
    agent { label 'worker' }

    stages {
        stage('Checkout SCM') {
            steps {
                checkout scm
            }
        }

        stage('Build Docker Image') {
            steps {
                dir('Step_Project_2/forStep2') {
                    sh '/usr/bin/docker build -t dmytrro/test-nodejs-app .'
                }
            }
        }

        stage('Run Tests in Container') {
            steps {
                dir('Step_Project_2/forStep2') {
                    sh '/usr/bin/docker run --rm dmytrro/test-nodejs-app npm test'
                }
            }
        }

        stage('Login to DockerHub') {
            when {
                expression { currentBuild.result == null || currentBuild.result == 'SUCCESS' }
            }
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub-credentials', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh 'echo $DOCKER_PASS | /usr/bin/docker login -u $DOCKER_USER --password-stdin'
                }
            }
        }

        stage('Push Docker Image') {
            when {
                expression { currentBuild.result == null || currentBuild.result == 'SUCCESS' }
            }
            steps {
                sh '/usr/bin/docker push dmytrro/test-nodejs-app'
            }
        }
    }

    post {
        failure {
            echo 'Pipeline failed. Please check the logs.'
        }
    }
}
